@model IEnumerable<ItemManagement.Models.ViewModels.OrderViewModel>
@using ItemManagement.Models.ViewModels

@{
    ViewData["Title"] = "Manage Orders";
}

<div class="container-fluid px-4 py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="fw-bold mb-0">
                <i class="fas fa-tasks me-2"></i>Manage Orders
            </h2>
            <p class="text-muted">Approve or reject pending customer orders.</p>
            <hr class="mt-2 mb-4">
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null) { /* Success Message HTML */ }
    @if (TempData["ErrorMessage"] != null) { /* Error Message HTML */ }

    <div class="card shadow-sm">
        <div class="card-header bg-light"><i class="fas fa-clock me-2"></i>Pending Orders</div>
        <div class="card-body p-0">
            @if (!Model.Any(o => o.Status == OrderStatus.Pending))
            {
                <div class="text-center py-5">
                    <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                    <h5 class="text-muted">No Pending Orders</h5>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="ps-4">Order ID</th>
                                <th>Date</th>
                                <th>Customer Name</th> <!-- New Column -->
                                @if (User.IsInRole("SuperAdmin"))
                                {
                                    <th>Store Name</th> <!-- SuperAdmin only column -->
                                }
                                <th class="text-end">Total</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Where(o => o.Status == OrderStatus.Pending).OrderByDescending(o => o.OrderDate))
                            {
                                <!-- Added 'order-row' class and data-order-id attribute -->
                                <tr class="order-row" data-order-id="@order.Id" style="cursor: pointer;">
                                    <td class="ps-4 fw-bold">#@order.Id.ToString().Substring(0, 8)</td>
                                    <td>@order.OrderDate.ToString("MMM dd, yyyy")</td>
                                    <td>@order.UserName</td> <!-- Display the customer's name -->
                                    @if (User.IsInRole("SuperAdmin"))
                                    {
                                        <td>@order.StoreName</td> <!-- Display Store Name for SuperAdmin -->
                                    }
                                    <td class="text-end fw-bold text-success">₹@order.TotalAmount.ToString("N2")</td>
                                    <td class="text-center">
                                        <!-- Actions will be here. Click the row for details. -->
                                        <!-- Or you can add the approve/reject buttons back here if you prefer. -->
                                        <div class="d-flex justify-content-center">
                                            <form asp-controller="Order" asp-action="ApproveOrder" asp-route-id="@order.Id" method="post" class="me-2" onclick="event.stopPropagation();">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-success"><i class="fas fa-check"></i></button>
                                            </form>
                                            <form asp-controller="Order" asp-action="RejectOrder" asp-route-id="@order.Id" method="post" onclick="event.stopPropagation();">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-danger"><i class="fas fa-times"></i></button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>

    <!-- You can add another card here for Archived/Processed orders if you like -->
</div>

<!-- Order Details Modal (Same as in myOrder.cshtml) -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl"> <!-- Using modal-xl for more space -->
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title"><i class="fas fa-receipt me-2"></i>Order Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Content will be loaded here via JavaScript -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
            var modalContent = $('#modalContent');

            $('.order-row').click(function() {
                const orderId = $(this).data('order-id');
                
                modalContent.html('<div class="text-center py-5"><div class="spinner-border text-primary"></div><p class="mt-2">Loading...</p></div>');
                modal.show();
                
                // This AJAX call to GetOrderDetails now returns the rich partial view
                $.get(`/Order/GetOrderDetails/${orderId}`)
                    .done(function(data) {
                        modalContent.html(data);
                    })
                    .fail(function() {
                        modalContent.html('<div class="alert alert-danger text-center">Failed to load order details.</div>');
                    });
            });
        });
    </script>
}
